<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Role">

<!-- 권한 리스트 조회 -->  
 <select id="getRoleList" parameterType="kr.co.fw.system.security.model.User" resultType="String" >
/* role-mapper getRoleList 권한 리스트 조회 */
SELECT ROLE_ID  AS name     /* 롤코드     VARCHAR2(50)     */
  FROM TBSY_ROLES_MST /* [SY] 롤마스터 */
 WHERE MB_ID   = 'YNG'
   AND ROLE_ID = 'ROLE_CUSTOMER'
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(search_word)'>
  <![CDATA[   AND UPPER(ROLE_NAME) LIKE '%'|| UPPER(#{search_word}) ||'%']]>
</if>
</select>

<!-- 권한 저장 --> 
<insert id="insertRole" parameterType="kr.co.fw.system.role.RoleVO" >
/* role-mapper insertRole 권한 저장 */
<![CDATA[
INSERT
  INTO TBSY_ROLES_MST /* [SY] 롤마스터 */
     ( ROLE_ID      /* 롤코드     VARCHAR2(50)     */
     , ROLE_NAME    /* 롤명       VARCHAR2(50)     */
     , IN_EMP_CD  	/* 입력자사번 VARCHAR2(20)     */
     , IN_DTM       /* 입력일시   TIMESTAMP(6)(11) */
     , MB_ID
     )
VALUES
     ( #{ROLE_ID  }   /* 롤코드     VARCHAR2(50)     */
     , #{ROLE_NAME}   /* 롤명       VARCHAR2(50)     */
     , #{IN_EMP_CD}   /* 입력자사번 VARCHAR2(20)     */
     , SYSDATE        /* 입력일시   TIMESTAMP(6)(11) */
     , #{MB_ID}
     )
]]>
</insert>
    
    
<!-- 권한 수정 --> 
<update id="updateRole" parameterType="kr.co.fw.system.role.RoleVO">
 /* role-mapper updateRole 권한 수정 */ 
<![CDATA[
UPDATE TBSY_ROLES_MST /* [SY] 롤마스터 */
   SET ROLE_ID   = #{ROLE_ID  }    /* 롤코드     VARCHAR2(50)     */
     , ROLE_NAME = #{ROLE_NAME}    /* 롤명       VARCHAR2(50)     */
     , UP_EMP_CD = #{UP_EMP_CD}    /* 수정자사번 VARCHAR2(20)     */
     , UP_DTM    = SYSDATE		   /* 수정일시   TIMESTAMP(6)(11) */
 WHERE MB_ID     = #{MB_ID} 	   /* 회사코드 VARCAHR2(20) */
 AND   ROLE_ID   = #{ROLE_ID} 	   /* 롤코드 VARCHAR2(50) */
]]>
</update>


<!-- 권한 삭제 -->
<delete id="deleteRole" parameterType="kr.co.fw.system.role.RoleVO">
/* role-mapper deleteRole 권한 삭제 */
<![CDATA[
DELETE TBSY_ROLES_MST /* [SY] 롤마스터 */
 WHERE MB_ID   = #{MB_ID} 
   AND ROLE_ID = #{ROLE_ID} /* 롤코드 VARCHAR2(50) */
]]>
</delete>

<!-- 권한 계층 리스트 조회 -->  
<select id="getRoleHieraList" resultType="kr.co.fw.system.role.RoleVO" parameterType="kr.co.fw.system.role.RoleVO" >
/* role-mapper.xml getRoleHieraList 입력 권한의 직접적인 부모 권한을 조회*/  
<![CDATA[
SELECT A.PRNT_ROLE_ID     					/* BASE롤코드 VARCHAR2(50)     */
     , B.ROLE_NAME 	  AS PARENT_ROLE_NAME   /* BASE롤코드명    */
     , A.CHLD_ROLE_ID      					/* 롤코드     VARCHAR2(50)     */
     , C.ROLE_NAME    AS CHILD_ROLE_NAME	/* 롤코드 명       */
     , A.IN_EMP_CD         					/* 입력자사번 VARCHAR2(20)     */
     , A.IN_DTM            					/* 입력일시   TIMESTAMP(6)(11) */
     , A.UP_EMP_CD         					/* 수정자사번 VARCHAR2(20)     */
     , A.UP_DTM            					/* 수정일시   TIMESTAMP(6)(11) */
  FROM TBSY_ROLES_HIERARCHY A /* [SY]롤계층맵핑 */
  	   LEFT OUTER JOIN TBSY_ROLES_MST B /* [SY]롤마스터   */
  	   ON A.MB_ID = B.MB_ID
  	   AND A.PRNT_ROLE_ID = B.ROLE_ID
  	   LEFT OUTER JOIN TBSY_ROLES_MST C /* [SY]롤마스터   */
  	   ON A.MB_ID = C.MB_ID
  	   AND A.CHLD_ROLE_ID = C.ROLE_ID  
 WHERE A.MB_ID        = #{MB_ID}
   AND A.CHLD_ROLE_ID = #{CHLD_ROLE_ID } /* 롤코드     VARCHAR2(50) */
]]>
</select>

<!-- 권한 계층 저장 --> 
<insert id="insertRoleHiera" parameterType="kr.co.fw.system.role.RoleVO" >
/* role-mapper.xml insertRoleHiera 권한 계층 저장 */ 
<![CDATA[
INSERT
  INTO TBSY_ROLES_HIERARCHY /* [SY]롤계층맵핑 */
     ( PRNT_ROLE_ID    		/* BASE롤코드 VARCHAR2(50)     */
     , CHLD_ROLE_ID     	/* 롤코드     VARCHAR2(50)     */
     , IN_EMP_CD            /* 입력자사번 VARCHAR2(20)     */
     , IN_DTM            	/* 입력일시   TIMESTAMP(6)(11) */
     , MB_ID
     )
VALUES
     ( #{PRNT_ROLE_ID}    	/* BASE롤코드 VARCHAR2(50)     */
     , #{CHLD_ROLE_ID}    	/* 롤코드     VARCHAR2(50)     */
     , #{IN_EMP_CD   }   	/* 입력자사번 VARCHAR2(20)     */
     , SYSDATE			    /* 입력일시   TIMESTAMP(6)(11) */
     , #{MB_ID}
     )
]]>
</insert>
    
    
<!-- 권한 계층 수정 --> 
<update id="updateRoleHiera" parameterType="kr.co.fw.system.role.RoleVO">
/* role-mapper.xml updateRoleHiera 권한 계층 수정 */
<![CDATA[
UPDATE TBSY_ROLES_HIERARCHY /* [SY]롤계층맵핑 */
   SET PRNT_ROLE_ID = #{PRNT_ROLE_ID}    /* BASE롤코드 VARCHAR2(50)     */
     , CHLD_ROLE_ID  = #{CHLD_ROLE_ID }    /* 롤코드     VARCHAR2(50)     */
     , UP_EMP_CD      	  = #{UP_EMP_CD     }       /* 수정자사번 VARCHAR2(20)     */
     , UP_DTM         = SYSDATE              /* 수정일시   TIMESTAMP(6)(11) */
 WHERE PRNT_ROLE_ID = #{PRNT_ROLE_ID}    /* BASE롤코드 VARCHAR2(50) */
   AND CHLD_ROLE_ID  = #{CHLD_ROLE_ID }    /* 롤코드     VARCHAR2(50) */
   AND MB_ID 		  = #{MB_ID}
]]>
</update>


<!-- 권한 계층 삭제 -->
<delete id="deleteRoleHiera" parameterType="kr.co.fw.system.role.RoleVO">
<![CDATA[
/* role-mapper.xml deleteRoleHiera 권한 계층 삭제 */ 
DELETE TBSY_ROLES_HIERARCHY /* [SY]롤계층맵핑 */
 WHERE PRNT_ROLE_ID = #{PRNT_ROLE_ID} /* BASE롤코드 VARCHAR2(50) */
   AND CHLD_ROLE_ID  = #{CHLD_ROLE_ID } /* 롤코드     VARCHAR2(50) */
   AND MB_ID          = #{MB_ID}
]]>
</delete>

<!-- 권한 계층 트리뷰 조회 -->
 <select id="getRoleTree" resultType="kr.co.fw.system.role.RoleVO" parameterType="kr.co.fw.system.role.RoleVO" >  
<![CDATA[
/* role-mapper.xml getRoleTree 권한 계층 트리뷰 조회 */ 
SELECT DISTINCT 
	   A.ISLEAF
	 , A.RESOURCE_ID
	 , A.RESOURCE_NAME||' ['||A.RESOURCE_ID||'] - '||
		CASE WHEN A.USE_YN = 'Y' THEN '사용'
	  		 ELSE '미사용'
	    END AS RESOURCE_NAME
	 , A.LV                      	  /* 레벨 */ 
	 , A.RESOURCE_URL                 /* 리소스URL    VARCHAR2(100)    */
	 , A.RESOURCE_PATTERN             /* 리소스패턴   VARCHAR2(100)    */
	 , A.RESOURCE_TYPE                /* 리소스타입   VARCHAR2(10)     */
	 , A.PARENT_RESOURCE_ID           /* 부모리소스ID VARCHAR2(20)     */
	 , A.SORT_NO                   	  /* 정렬순서     NUMBER(3,0)      */
	 , A.USE_YN
	 , #{CHLD_ROLE_ID} AS CHLD_ROLE_ID
  FROM (SELECT LEVEL AS LV                  /*레벨*/ 
	         , CONNECT_BY_ISLEAF AS ISLEAF  /*자식이 있으면 0 없으면 1 */
	         , RESOURCE_ID                  /* 리소스ID     VARCHAR2(20)     */
	         , RESOURCE_NAME                /* 리소스명     VARCHAR2(50)     */
	         , RESOURCE_URL                 /* 리소스URL    VARCHAR2(100)    */
	         , RESOURCE_PATTERN             /* 리소스패턴   VARCHAR2(100)    */
	         , RESOURCE_TYPE                /* 리소스타입   VARCHAR2(10)     */
	         , PRNT_RESOURCE_ID AS PARENT_RESOURCE_ID           /* 부모리소스ID VARCHAR2(20)     */
	         , USE_YN                       /* 사용여부     VARCHAR2(1)      */
	         , SORT_NO                   	/* 정렬순서     NUMBER(3,0)      */
	         , IN_EMP_CD                    /* 입력자사번   VARCHAR2(20)     */
	         , IN_DTM                       /* 입력일시     TIMESTAMP(6)(11) */
	         , UP_EMP_CD                    /* 수정자사번   VARCHAR2(20)     */
	         , UP_DTM                       /* 수정일시     TIMESTAMP(6)(11) */
	         , MB_ID
	         , SYSTEM_GUBUN
		  FROM (SELECT * FROM TBSY_RESOURCES WHERE MB_ID = #{MB_ID} AND MENU_GBN_CD = 'MENU' ) /* [SY] 리소스마스터(메뉴) */
		 WHERE 1 = 1
	   --  AND USE_YN = 'Y'
]]>  
 <if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(RESOURCE_ID)'>
     	   AND PRNT_RESOURCE_ID =<![CDATA[ #{RESOURCE_ID}]]> 
     	 START WITH RESOURCE_ID = <![CDATA[ #{RESOURCE_ID}]]> 
 </if>		 
<if test='@kr.co.fw.common.util.CommUtil@isEmpty(RESOURCE_ID)'>
    	   AND PRNT_RESOURCE_ID = 'CM_100'
    	 START WITH RESOURCE_ID = 'CM_100' 
</if>
<![CDATA[		 
       CONNECT BY PRIOR RESOURCE_ID = PRNT_RESOURCE_ID  
         ORDER SIBLINGS BY SORT_NO     
	   ) A                                            
     , TBSY_RESOURCES_ROLE B                                                   
 WHERE A.MB_ID = #{MB_ID}  
-- AND A.USE_YN = 'Y'
   AND B.MB_ID = #{MB_ID} 
   AND A.RESOURCE_ID = B.RESOURCE_ID                                                 
   AND A.RESOURCE_TYPE = 'URL'   
   AND B.ROLE_ID IN 
       ( SELECT #{CHLD_ROLE_ID} AS ROLE_IN FROM DUAL
          UNION ALL 
         SELECT PRNT_ROLE_ID AS ROLE_IN  
           FROM TBSY_ROLES_HIERARCHY 
          WHERE MB_ID = #{MB_ID} 
          START WITH CHLD_ROLE_ID = #{CHLD_ROLE_ID}      
        CONNECT BY PRIOR PRNT_ROLE_ID = CHLD_ROLE_ID     
       ) 
 ORDER BY A.SORT_NO                         
]]>
</select>

</mapper>
