<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ScdReadRole">

<!--조회 권한 트리뷰 -->
<select id="getScdReadRoleTree" resultType="ScdReadRoleVO" parameterType="ScdReadRoleVO" >  
<![CDATA[
 SELECT A.LV
      , A.ISLEAF
      , A.SCD
      , CASE WHEN A.USE_YN = 'Y' THEN A.SNM||' [운영]'
      		 ELSE A.SNM||' [폐쇄]'
      	END AS SNM
      , (CASE WHEN B.SCD IS NULL THEN '0' 
             ELSE '1' 
        END) AS VIEW_YN
   FROM (SELECT LEVEL AS LV                  /* 레벨 */ 
              , CONNECT_BY_ISLEAF AS ISLEAF  /* 자식이 있으면 0 없으면 1 */
              , SCD                          /* 조직코드 */
              , SNM
              , USE_YN  
           FROM (SELECT * FROM TBIN_SCD WHERE MB_ID = #{MB_ID} )
]]>		
  		  WHERE 1 = 1
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SCD)'>
		    AND PSCD  = <![CDATA[ #{SCD}]]> 
		  START WITH SCD = <![CDATA[ #{SCD}]]> 
</if>
<if test='@kr.co.fw.common.util.CommUtil@isEmpty(SCD)'>
    	    AND PSCD IS NULL
  		  START WITH PSCD IS NULL
</if>
<![CDATA[           
	    CONNECT BY PRIOR SCD = PSCD
		  ORDER SIBLINGS BY SORT_NO
        ) A 
        LEFT OUTER JOIN 
        (SELECT SCD 
       	   FROM TBSY_USER_SCD_READ 
       	  WHERE MB_ID  = #{MB_ID}
       	    AND EMP_CD = #{EMP_CD}
        ) B
        ON A.SCD = B.SCD
 WHERE 1 = 1
 GROUP BY A.LV, A.ISLEAF, A.SCD, A.SNM, B.SCD, A.USE_YN
]]>
</select>

<!-- 하위조직 리스트 조회 -->
<select id="selectScdUnderList" resultType="ScdReadRoleVO" parameterType="ScdReadRoleVO" >  
<![CDATA[
/* scdReadRole-mapper selectScdUnderList 하위조직 리스트 조회  */
 SELECT SCD
  	  , #{EMP_CD} AS EMP_CD
   FROM (SELECT * FROM TBIN_SCD WHERE MB_ID = #{MB_ID})
  WHERE USE_YN = 'Y'
  START WITH SCD = #{SCD}
CONNECT BY PRIOR SCD = PSCD
  ORDER SIBLINGS BY SORT_NO, SNM 
]]>
</select>

<!-- 조회 권한 저장 --> 
<insert id="insertScdReadRole" parameterType="ScdReadRoleVO" >
<![CDATA[
/* scdReadRole-mapper insertScdReadRole 조회 권한 저장  */
INSERT
  INTO TBSY_USER_SCD_READ /* [ICOM][보안]사용자-롤 조직 조회 */
     ( EMP_CD       /* 사용자아이디 VARCHAR2(10)     */
     , SCD          /* 조직코드     VARCHAR2(4)      */
     , IN_EMP_CD    /* 입력자사번   VARCHAR2(20)     */
     , IN_DTM       /* 입력일시     TIMESTAMP(6)(11) */
     , UP_EMP_CD
     , UP_DTM
     , MB_ID
     )
VALUES
     ( #{EMP_CD}  	  /* 사용자아이디 VARCHAR2(10)     */
     , #{SCD}  		  /* 조직코드     VARCHAR2(4)      */
     , #{IN_EMP_CD}   /* 입력자사번   VARCHAR2(20)     */
     , SYSDATE  	  /* 입력일시     TIMESTAMP(6)(11) */
     , #{IN_EMP_CD}
     , SYSDATE
     , #{MB_ID}
     )
]]>
</insert>

<!-- 조회 권한 삭제 -->
<delete id="deleteScdReadRole" parameterType="ScdReadRoleVO">
<![CDATA[
/* scdReadRole-mapper deleteScdReadRole 조직 조회 권한 삭제 */
DELETE TBSY_USER_SCD_READ /* [ICOM][보안]사용자-롤 조직 조회 */
 WHERE EMP_CD = #{EMP_CD} /* 사용자아이디 VARCHAR2(10) */
   AND MB_ID  = #{MB_ID}
]]>
</delete>

<select id="selectInsaList" resultType="Hmap" parameterType="InSaVO" >  
/* scdReadRole-mapper selectInsaList[인사_마스터(상세정보)] SELECT */
SELECT A.EMP_CD     /* 사원코드 VARCHAR2(10)      */
	 , A.EMP_NM     /* 사원명 VARCHAR2(20)        */
	 , A.USER_ID    /* 사용자아이디 VARCHAR2(20)  */
	 , A.RE_EMP_CD  /* 소개자사번 VARCHAR2(10)    */
	 , A.RE_EMP_NM  /* 소개자이름 VARCHAR2(20)    */
	 , A.SCD       	/* 조직코드 VARCHAR2(20)      */
	 , B.SNM 		/* 조직이름 */
	 , B.SNMPATH 	/* 조직명경로 */
	 , A.ENT_YMD    /* 입사일 VARCHAR2(10)        */
	 , A.PAY_GBN    /* 지급구분 VARCHAR2(3)       */
	 , A.JIKGUB		/* 직급 */
	 , A.JIKCHK		/* 직책 */
	 , A.EMPSTA		/* 재직구분 */
	 , A.JOIN_GBN 	/* 입사구분 VARCHAR2(3)       */
	 , A.ROLE_ID 	/* 권한코드 VARCHAR2(10)      */
  FROM (SELECT * FROM TBIN_EMPMST WHERE MB_ID = #{MB_ID} ) A /* [인사_마스터(상세정보)] */
  	   LEFT OUTER JOIN 
  	   (SELECT SCD
             , SNM
             , SYS_CONNECT_BY_PATH(SNM,'/') AS SNMPATH
             , MB_ID
          FROM (SELECT * FROM TBIN_SCD WHERE MB_ID = #{MB_ID} )
    	 START WITH PSCD IS NULL
       CONNECT BY PRIOR SCD = PSCD
       ) B
  	   ON  A.MB_ID  = B.MB_ID
  	   AND A.SCD    = B.SCD
 WHERE 1 = 1
<if test='@kr.co.fw.common.util.CommUtil@isNotEquals(MB_ID, "GNX")'>    
   AND A.EMP_CD != 'SADMIN'
</if>
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_SCD)'>    
   AND A.SCD = #{SRCH_SCD}
</if>
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_JIKCHK)'>    
   AND A.JIKCHK = #{SRCH_JIKCHK}
</if>
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_JIKGUB)'>    
   AND A.JIKGUB = #{SRCH_JIKGUB}
</if>
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMPSTA)'>    
   AND A.EMPSTA = #{SRCH_EMPSTA}
</if>
<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_TERM)'>    
	<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_TERM, "01")'>    <!-- 입사일 -->
   AND A.ENT_YMD BETWEEN #{SRCH_TERM_START_VALUE} AND #{SRCH_TERM_END_VALUE}
	</if>
</if>

<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP)'>
	<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP_VALUE)'>   
		<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_EMP, "01")'>
   AND A.EMP_NM LIKE '%'||#{SRCH_EMP_VALUE}||'%'
		</if>
		<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_EMP, "02")'>
   AND A.EMP_CD LIKE '%'||UPPER(#{SRCH_EMP_VALUE})||'%'
		</if>
		<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_EMP, "03")'>
   AND A.USER_ID = #{SRCH_EMP_VALUE}
		</if>
		<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_EMP, "04")'>
   AND A.PERNO = #{SRCH_EMP_VALUE}
		</if>
		<if test='@kr.co.fw.common.util.CommUtil@isEquals(SRCH_EMP, "05")'>
   AND A.HPNO = #{SRCH_EMP_VALUE}
		</if>
	</if>
</if> 
ORDER BY A.EMP_NM
</select>


<!-- 사용자 권한 리스트 조회 --> 
<select id="getUserRoleMapList" resultType="ScdReadRoleVO" parameterType="ScdReadRoleVO" > 
/* scdReadRole-mapper getUserRoleMapList 사용자 권한 리스트 조회  */
/* TBSY_USER_ROLE_MAP[[ICOM][보안]사용자-롤 매핑] SELECT */
SELECT A.USER_ID      /* 사용자아이디 VARCHAR2(20)     */
     , A.ROLE_ID      /* 롤코드       VARCHAR2(50)     */
     , B.ROLE_NAME    /* 역할이름 */
     , A.IN_EMP_CD    /* 입력자사번   VARCHAR2(20)     */
     , A.IN_DTM       /* 입력일시     TIMESTAMP(6)(11) */
     , A.UP_EMP_CD    /* 수정자사번   VARCHAR2(20)     */
     , A.UP_DTM       /* 수정일시     TIMESTAMP(6)(11) */
  FROM TBSY_USER_ROLE_MAP A /* [SY] 사용자-롤 매핑 */
       LEFT OUTER JOIN TBSY_ROLES_MST B
       ON A.ROLE_ID = B.ROLE_ID
       AND A.MB_ID  = B.MB_ID
 WHERE A.USER_ID    = #{USER_ID} /* 사용자아이디 VARCHAR2(20) */
   AND A.MB_ID      = #{MB_ID}
</select>


<!-- 사용자 권한 메핑 저장 --> 
<insert id="insertUserRoleMap" parameterType="ScdReadRoleVO" >
<![CDATA[
/* scdReadRole-mapper insertUserRoleMap 사용자 권한 메핑 저장  */
INSERT
  INTO TBSY_USER_ROLE_MAP /* [SY] 사용자-롤 매핑 */
     ( USER_ID      /* 사용자아이디 VARCHAR2(20)     */
     , ROLE_ID      /* 롤코드       VARCHAR2(50)     */
     , IN_EMP_CD    /* 입력자사번   VARCHAR2(20)     */
     , IN_DTM       /* 입력일시     TIMESTAMP(6)(11) */
     , UP_EMP_CD
     , UP_DTM
     , MB_ID
     )
VALUES
     ( #{USER_ID}      /* 사용자아이디 VARCHAR2(20)     */
     , #{ROLE_ID}      /* 롤코드       VARCHAR2(50)     */
     , #{IN_EMP_CD}    /* 입력자사번   VARCHAR2(20)     */
     , SYSDATE   	   /* 입력일시     TIMESTAMP(6)(11) */
     , #{IN_EMP_CD}    /* 수정자사번   VARCHAR2(20)     */
     , SYSDATE   	   /* 수정일시     TIMESTAMP(6)(11) */
     , #{MB_ID}
     )
]]>
</insert>

<!-- 사용자 권한 매핑 수정 -->
<update id="updateUserRoleMap" parameterType="ScdReadRoleVO" >
<![CDATA[
/* scdReadRole-Mapper.xml updateUserRoleMap 사용자 권한 매핑 수정 */
UPDATE TBSY_USER_ROLE_MAP       /* [SY] 사용자-롤 매핑 */
   SET ROLE_ID   = #{ROLE_ID}   /* 롤코드       VARCHAR2(50)     */
     , UP_EMP_CD = #{UP_EMP_CD} /* 수정자사번   VARCHAR2(20)     */
     , UP_DTM  	 = SYSDATE      /* 입력일시     DATE             */
 WHERE MB_ID 	 = #{MB_ID}
   AND USER_ID   = #{USER_ID}     
]]>
</update>


<!-- 사용자 권한 메핑 삭제 -->
<delete id="deleteUserRoleMap" parameterType="ScdReadRoleVO">
<![CDATA[
/* scdReadRole-mapper deleteUserRoleMap 사용자 권한 메핑 삭제  */
DELETE TBSY_USER_ROLE_MAP 	/* [SY] 사용자-롤 매핑 */
 WHERE USER_ID = #{USER_ID} /* 사용자아이디 VARCHAR2(20) */
   AND ROLE_ID = #{ROLE_ID} /* 롤코드       VARCHAR2(50) */
   AND MB_ID   = #{MB_ID}
]]>
</delete>

<!-- 사용자 권한 메핑 삭제 -->
<delete id="deleteUserRoleMapByUserId" parameterType="ScdReadRoleVO">
<![CDATA[
/* scdReadRole-mapper deleteUserRoleMapByUSER_ID 사용자 권한 메핑 삭제  */
DELETE TBSY_USER_ROLE_MAP 	/* [SY] 사용자-롤 매핑 */
 WHERE USER_ID = #{USER_ID} /* 사용자아이디 VARCHAR2(20) */
   AND MB_ID   = #{MB_ID}
]]>
</delete>
    
    
</mapper>
