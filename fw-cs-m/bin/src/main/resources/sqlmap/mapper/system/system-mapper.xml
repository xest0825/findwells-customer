<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="System">
<!-- 회원사 목록 조회 -->
<select id="selectMemberList" parameterType="kr.co.fw.system.SystemVO" resultType="Hmap" >
/* system-mapper.xml selectMemberList */
/* TBCM_MEMBER[[공통] 회원사(GA)관리] SELECT */
SELECT MB_ID           /* 회원사 ID                       VARCHAR2(20)  */
     , MB_NM           /* 회원사이름                      VARCHAR2(100) */
     , ZIPCD           /* 우편번호                        VARCHAR2(7)   */
     , ADDR1           /* 주소                            VARCHAR2(100) */
     , ADDR2           /* 상세주소                        VARCHAR2(100) */
     , IN_EMP_CD       /* 입력자                          VARCHAR2(20)  */
     , IN_DTM          /* 입력일시                        DATE(7)       */
     , UP_EMP_CD       /* 수정자                          VARCHAR2(20)  */
     , UP_DTM          /* 수정일시                        DATE(7)       */
     , MB_TYPE         /* 회원사구분(지사형/지점형/개인GA VARCHAR2(4)   */
     , USE_YN          /* 사용여부                        VARCHAR2(1)   */
     , CONT_FRYMD      /* 계약시작일                      VARCHAR2(10)  */
     , CONT_TOYMD      /* 계약종료일                      VARCHAR2(10)  */
     , CORP_REG_NUM    /* 사업자등록번호                  VARCHAR2(12)  */
     , REPRESENT_NM    /* 대표번호                        VARCHAR2(30)  */
     , TELNO           /* 전화번호                        VARCHAR2(14)  */
     , FAXNO           /* 팩스번호                        VARCHAR2(14)  */
     , DOMAIN_URL      /* 도메인주소                      VARCHAR2(100) */
     , DOMAIN_MNG      /* 도메인관리                      VARCHAR2(100) */
     , DOMAIN_ID       /* 도메인ID                        VARCHAR2(100) */
     , DOMAIN_PW       /* 도메인비번                      VARCHAR2(100) */
     , MEMO            /* 메모                            VARCHAR2(100) */
     , BIGO            /* 개발자비고                      VARCHAR2(100) */
     , CI_URL          /* 회사이미지주소                  VARCHAR2(200) */
     , MB_LOGIN_ID     /* 회사코드                        VARCHAR2(20)  */
     , LOGO_URL        /* 회사로고주소                    VARCHAR2(200) */
     , MANAGER_NM      /* 담당자                          VARCHAR2(30)  */
     , MTELNO          /* 담당자번호                      VARCHAR2(14)  */
     , SORT_NO         /* 순서                            NUMBER(22)    */
     , PKG_NAME        /* 팩키지명                        VARCHAR2(20)  */
     , CERTLOGO_URL    /* 회사증명서로고주소              VARCHAR2(200) */
     , SEAL_URL        /* 회사증명서인감주소              VARCHAR2(200) */
  FROM TBSY_MEMBER /* [공통] 회원사(GA)관리 */
 WHERE USE_YN = 'Y'
 ORDER BY SORT_NO
</select>

<select id="selectMemberInfo" parameterType="kr.co.fw.system.SystemVO" resultType="Hmap" >
/* system-mapper.xml selectMemberInfo 회원사 정보(로고,주소) 조회 */
SELECT MB_ID 		/* 회원사 ID  */
	 , MB_NM  		/* 회원사이름 */
	 , ADDR1 		/* 주소 */
	 , 'http://fims.kr.co.fw.co.kr'||CI_URL AS CI_URL		/* 회사이미지주소 */
	 , 'http://fims.kr.co.fw.co.kr'||LOGO_URL AS LOGO_URL	/* 회사로고주소 */
	 , MB_LOGIN_ID  /* 회사로그인아이디 */
	 , PKG_NAME  	/* 회사패키지명 */
  FROM TBSY_MEMBER
 WHERE MB_ID = #{MB_ID}
</select>

<select id="selectMemberSubList" parameterType="kr.co.fw.system.SystemVO" resultType="Hmap" >
/* system-mapper.xml selectMemberSubList 회원사 서브 목록 조회 */
SELECT C.MB_ID 		 	/* 회사ID */
	 , C.MB_LOGIN_ID 	/* 로그인용 회사ID */
	 
     -- , S.ERP_YN		 	/* ERP사용여부 */
     -- , S.SPEC_TYPE	 	/* 수수료 명세타입 */
     -- , S.SUNBUN_YN	 	/* 순번사용여부 */
     -- , S.COM_RULE	 	/* 수수료 규정 */
     -- , S.CAR_RULE	 	/* 자동차수수료 규정 */
     -- , S.JIGUBRATE_TYPE  /* 지급율 타입 */
     -- , S.OVR_TYPE		/* 오버라이드율 타입(영업관리율) */
     -- , S.EVAL_YN			/* 평가여부 */
     -- , S.HOLD_TYPE		/* 지급보류 타입 */
     -- , S.RECRUITING_YN   /* 리크루팅 사용여부 */
     -- , S.GRADE_TYPE		/* 환산성적 타입 */
     -- , S.DTL_FP_AMT_YN	/* 설계사 상세 금액 여부 */
     
     , C.CONF_CD
     , C.CONF_VAL
     
     , CM.CONF_CD_NM
     , CM.CONF_CD_DESC
     
     , C.IN_EMP_CD
     , C.IN_DTM
     , C.UP_EMP_CD
     , C.UP_DTM
     , C.SEQ AS CONF_SEQ
  FROM TBSY_MEMBER M
       LEFT JOIN 
       TBSY_MEMBER_CONF C
       ON M.MB_ID = C.MB_ID
       LEFT OUTER JOIN 
       TBSY_CONF_CD_MST CM
       ON C.CONF_CD = CM.CONF_CD
 WHERE M.MB_ID = #{MB_ID}
   AND CM.USE_YN = 'Y'
 ORDER BY CM.SORT_NO 
</select>

<!-- 회원사입력 -->
<insert id="insertMember" parameterType="kr.co.fw.system.SystemVO" >
	/* system-mapper.xml insertMember 회원사 입력 */
	INSERT
	  INTO TBSY_MEMBER /* [SY][시스템] 회원사정보 */
	     ( MB_ID           /* 회원사ID          VARCHAR2(20)   */
	     , MB_NM           /* 회사명            VARCHAR2(100)  */
	     , ZIPCD           /* 우편번호          VARCHAR2(7)    */
	     , ADDR1           /* 주소              VARCHAR2(100)  */
	     , ADDR2           /* 상세주소          VARCHAR2(100)  */
	     , IN_EMP_CD       /* 입력자사번        VARCHAR2(20)   */
	     , IN_DTM          /* 입력일시          DATE(7)        */
	     , MB_TYPE         /* 회사타입          VARCHAR2(4)    */
	     , USE_YN          /* 사여부            VARCHAR2(1)    */
	     , CONT_FRYMD      /* 계약시작일        VARCHAR2(10)   */
	     , CONT_TOYMD      /* 계약종료일        VARCHAR2(10)   */
	     , CORP_REG_NUM    /* 법인등록번호      VARCHAR2(12)   */
	     , REPRESENT_NM    /* 대표명            VARCHAR2(30)   */
	     , TELNO           /* 전화번호          VARCHAR2(14)   */
	     , FAXNO           /* 팩스번호          VARCHAR2(14)   */
	     , DOMAIN_URL      /* 도메인URL         VARCHAR2(100)  */
	     , DOMAIN_MNG      /* 도메인관리        VARCHAR2(100)  */
	     , DOMAIN_ID       /* 도메인ID          VARCHAR2(100)  */
	     , DOMAIN_PW       /* 도메인비번        VARCHAR2(100)  */
	     , MEMO            /* 메모              VARCHAR2(100)  */
	     , BIGO            /* 비고              VARCHAR2(100)  */
	     , CI_URL          /* CI URL            VARCHAR2(200)  */
	     , MB_LOGIN_ID     /* 회원사로그인ID    VARCHAR2(20)   */
	     , LOGO_URL        /* 로고 URL          VARCHAR2(200)  */
	     , MANAGER_NM      /* 관리자이름        VARCHAR2(30)   */
	     , MTELNO          /* 관리자연락처      VARCHAR2(14)   */
	     , SORT_NO         /* 정렬순서          NUMBER(22)     */
	     , PKG_NAME        /* PKG명             VARCHAR2(20)   */
	     , COPY_RIGHT      /* COPYRIGHT         VARCHAR2(2000) */
	     , CERTLOGO_URL    /* 증명서사용로고URL VARCHAR2(200)  */
	     , SEAL_URL        /* 직인URL           VARCHAR2(200)  */
	     )
	VALUES
	     ( #{MB_ID       }   /* 회원사ID          VARCHAR2(20)   */
	     , #{MB_NM       }   /* 회사명            VARCHAR2(100)  */
	     , #{ZIPCD       }   /* 우편번호          VARCHAR2(7)    */
	     , #{ADDR1       }   /* 주소              VARCHAR2(100)  */
	     , #{ADDR2       }   /* 상세주소          VARCHAR2(100)  */
	     , #{IN_EMP_CD   }   /* 입력자사번        VARCHAR2(20)   */
	     , SYSDATE           /* 입력일시          DATE(7)        */
	     , #{MB_TYPE     }   /* 회사타입          VARCHAR2(4)    */
	     , 'Y'               /* 사용여부            VARCHAR2(1)    */
	     , #{CONT_FRYMD  }   /* 계약시작일        VARCHAR2(10)   */
	     , #{CONT_TOYMD  }   /* 계약종료일        VARCHAR2(10)   */
	     , #{CORP_REG_NUM}   /* 법인등록번호      VARCHAR2(12)   */
	     , #{REPRESENT_NM}   /* 대표명            VARCHAR2(30)   */
	     , #{TELNO       }   /* 전화번호          VARCHAR2(14)   */
	     , #{FAXNO       }   /* 팩스번호          VARCHAR2(14)   */
	     , #{DOMAIN_URL  }   /* 도메인URL         VARCHAR2(100)  */
	     , #{DOMAIN_MNG  }   /* 도메인관리        VARCHAR2(100)  */
	     , #{DOMAIN_ID   }   /* 도메인ID          VARCHAR2(100)  */
	     , #{DOMAIN_PW   }   /* 도메인비번        VARCHAR2(100)  */
	     , #{MEMO        }   /* 메모              VARCHAR2(100)  */
	     , #{BIGO        }   /* 비고              VARCHAR2(100)  */
	     , #{CI_URL      }   /* CI URL            VARCHAR2(200)  */
	     , UPPER(#{MB_LOGIN_ID})   /* 회원사로그인ID    VARCHAR2(20)   */
	     , #{LOGO_URL    }   /* 로고 URL          VARCHAR2(200)  */
	     , #{MANAGER_NM  }   /* 관리자이름        VARCHAR2(30)   */
	     , #{MTELNO      }   /* 관리자연락처      VARCHAR2(14)   */
	     , #{SORT_NO     }   /* 정렬순서          NUMBER(22)     */
	     , 'PKG_SU_CALC'     /* PKG명             VARCHAR2(20)   */
	     , #{COPY_RIGHT  }   /* COPYRIGHT         VARCHAR2(2000) */
	     , #{CERTLOGO_URL}   /* 증명서사용로고URL VARCHAR2(200)  */
	     , #{SEAL_URL    }   /* 직인URL           VARCHAR2(200)  */
	     )
</insert>

<!-- 수수료 규정 적용 -->
<update id="checkComRule" parameterType="kr.co.fw.system.SystemVO" >
/* system-mapper.xml checkComRule 수수료규정 적용 수정 */
UPDATE TBCM_SECURED_RESOURCES
<if test='@kr.co.fw.common.util.CommUtil@isNotEquals(COM_RULE,"MIX")'>
        SET USE_YN = 'N'
</if>
<if test='@kr.co.fw.common.util.CommUtil@isEquals(COM_RULE,"MIX")'>
        SET USE_YN = 'Y'
</if>
  WHERE RESOURCE_ID = 'SU_300'
    AND MB_ID = #{MB_ID}
</update>

<!-- 회원사입력 -->
<insert id="exec_PRC_NEW_MEMBER"
		parameterType="kr.co.fw.system.SystemVO"
        statementType="CALLABLE"
        flushCache="true">
<!-- call PKG_SU_CALC.PRC_ST010_CREATEMONTH(#{COM_YM}, #{IN_EMP_CD}, UPPER(#{MB_ID}), UPPER(#{MB_LOGIN_ID})) -->
</insert>

<!-- 회원사 수정 -->
<update id="updateMember" parameterType="kr.co.fw.system.SystemVO" >
/* system-mapper.xml updateMember 회원사 수정 */
	UPDATE TBSY_MEMBER /* [SY][시스템] 회원사정보 */
	   SET MB_ID        = #{MB_ID       }    /* 회원사ID          VARCHAR2(20)   */
	     , MB_NM        = #{MB_NM       }    /* 회사명            VARCHAR2(100)  */
	     , ZIPCD        = #{ZIPCD       }    /* 우편번호          VARCHAR2(7)    */
	     , ADDR1        = #{ADDR1       }    /* 주소              VARCHAR2(100)  */
	     , ADDR2        = #{ADDR2       }    /* 상세주소          VARCHAR2(100)  */
	     , UP_EMP_CD    = #{UP_EMP_CD   }    /* 수정자사번        VARCHAR2(20)   */
	     , UP_DTM       = SYSDATE            /* 수정일시          DATE(7)        */
	     , MB_TYPE      = #{MB_TYPE     }    /* 회사타입          VARCHAR2(4)    */
	     , USE_YN       = #{USE_YN      }    /* 사여부            VARCHAR2(1)    */
	     , CONT_FRYMD   = #{CONT_FRYMD  }    /* 계약시작일        VARCHAR2(10)   */
	     , CONT_TOYMD   = #{CONT_TOYMD  }    /* 계약종료일        VARCHAR2(10)   */
	     , CORP_REG_NUM = #{CORP_REG_NUM}    /* 법인등록번호      VARCHAR2(12)   */
	     , REPRESENT_NM = #{REPRESENT_NM}    /* 대표명            VARCHAR2(30)   */
	     , TELNO        = #{TELNO       }    /* 전화번호          VARCHAR2(14)   */
	     , FAXNO        = #{FAXNO       }    /* 팩스번호          VARCHAR2(14)   */
	     , DOMAIN_URL   = #{DOMAIN_URL  }    /* 도메인URL         VARCHAR2(100)  */
	     , DOMAIN_MNG   = #{DOMAIN_MNG  }    /* 도메인관리        VARCHAR2(100)  */
	     , DOMAIN_ID    = #{DOMAIN_ID   }    /* 도메인ID          VARCHAR2(100)  */
	     , DOMAIN_PW    = #{DOMAIN_PW   }    /* 도메인비번        VARCHAR2(100)  */
	     , MEMO         = #{MEMO        }    /* 메모              VARCHAR2(100)  */
	     , BIGO         = #{BIGO        }    /* 비고              VARCHAR2(100)  */
	     , CI_URL       = #{CI_URL      }    /* CI URL            VARCHAR2(200)  */
	     , MB_LOGIN_ID  = UPPER(#{MB_LOGIN_ID})    /* 회원사로그인ID    VARCHAR2(20)   */
	     , LOGO_URL     = #{LOGO_URL    }    /* 로고 URL          VARCHAR2(200)  */
	     , MANAGER_NM   = #{MANAGER_NM  }    /* 관리자이름        VARCHAR2(30)   */
	     , MTELNO       = #{MTELNO      }    /* 관리자연락처      VARCHAR2(14)   */
	     , SORT_NO      = #{SORT_NO     }    /* 정렬순서          NUMBER(22)     */
	     , PKG_NAME     = #{PKG_NAME    }    /* PKG명             VARCHAR2(20)   */
	     , COPY_RIGHT   = #{COPY_RIGHT  }    /* COPYRIGHT         VARCHAR2(2000) */
	     , CERTLOGO_URL = #{CERTLOGO_URL}    /* 증명서사용로고URL VARCHAR2(200)  */
	     , SEAL_URL     = #{SEAL_URL    }    /* 직인URL           VARCHAR2(200)  */
     WHERE MB_ID = #{MB_ID}
</update>




<select id="selectErrorList" parameterType="kr.co.fw.system.log.ErrorLogVO" resultType="kr.co.fw.system.log.ErrorLogVO" >    
<![CDATA[
/* system-mapper.xml selectErrorList 에러목록 조회 */
SELECT ERROR_NO        /* SEQ		  NUMBER(22)           */
     , ERROR_URL       /* URL         VARCHAR2(1000)       */
     , ERROR_STATUS    /* 상태코드    VARCHAR2(10)         */
     , ERROR_CLASS     /* 에러코드    VARCHAR2(100)        */
     , ERROR_MSG       /* 에러메시지  VARCHAR2(4000)       */
     , ERROR_STRING    /* 에러스트링  VARCHAR2(4000)       */
     , ERROR_TRACE     /* 에러 트레이스 4줄 VARCHAR2(4000) */
     , ERROR_IP        /* 에러발생 IP VARCHAR2(20)         */
     , IN_DTM
     , MB_ID
     , IN_EMP_CD
  FROM TBSY_ERROR     
 WHERE MB_ID = #{MB_ID}
]]>
</select>
    
<insert id="insertError" parameterType="kr.co.fw.system.log.ErrorLogVO" >
<![CDATA[
/* system-mapper.xml insertError 에러정보 입력 */
INSERT
  INTO TBSY_ERROR	   /* [ICOM][공통]에러-LOG */
     ( ERROR_NO        /* SEQ         NUMBER(22)           */
     , ERROR_URL       /* URL         VARCHAR2(1000)       */
     , ERROR_STATUS    /* 상태코드    VARCHAR2(10)         */
     , ERROR_CLASS     /* 에러코드    VARCHAR2(100)        */
     , ERROR_MSG       /* 에러메시지  VARCHAR2(4000)       */
     , ERROR_STRING    /* 에러스트링  VARCHAR2(4000)       */
     , ERROR_TRACE     /* 에러 트레이스 4줄 VARCHAR2(4000) */
     , ERROR_IP        /* 에러발생 IP VARCHAR2(20)         */
     , IN_DTM          /* 입력일시 */
     , MB_ID
     , IN_EMP_CD
     )
VALUES
     ( TBSY_ERROR_SEQ.NEXTVAL        	  /* SEQ	     NUMBER(22)           */
     , #{ERROR_URL   ,jdbcType=VARCHAR}   /* URL         VARCHAR2(1000)       */
     , #{ERROR_STATUS,jdbcType=VARCHAR}   /* 상태코드    VARCHAR2(10)         */
     , #{ERROR_CLASS ,jdbcType=VARCHAR}   /* 에러코드    VARCHAR2(100)        */
     , #{ERROR_MSG   ,jdbcType=VARCHAR}   /* 에러메시지  VARCHAR2(4000)       */
     , #{ERROR_STRING,jdbcType=VARCHAR}   /* 에러스트링  VARCHAR2(4000)       */
     , #{ERROR_TRACE ,jdbcType=VARCHAR}   /* 에러 트레이스 4줄 VARCHAR2(4000) */
     , #{ERROR_IP    ,jdbcType=VARCHAR}   /* 에러발생 IP VARCHAR2(20)         */
     , SYSDATE                            /* 에러발생일시 */
     , #{MB_ID}
     , #{IN_EMP_CD}
    )
  ]]>
</insert>

<!-- 로그인 이력 저장 -->
<insert id="insertLoginHist" parameterType="LoginVO">
<![CDATA[
/* system-mapper insertLoginHist 로그인 이력 저장 */
INSERT
  INTO TBSY_LOGIN_HIST   /* [[공통]로그인이력] */
     ( EMP_CD            /* 사번  VARCHAR2(30) */
	 , LOGIN_IP
	 , LOGIN_DTM
	 , MB_ID
	 , SEQ
	 , SYSTEM_GUBUN
     )
VALUES
     ( #{USER_ID}  /* 사용자 ID         VARCHAR2(30) */
	 , #{IN_IP}    /* 사용자 IP 주소    VARCHAR2(30) */
	 , SYSDATE
	 , #{MB_ID}
	 , TBSY_LOGIN_HIST_SEQ.NEXTVAL
	 , #{SYSTEM_GUBUN}
     )
]]>
</insert>

<!-- ******* 액션로그 영역 ******* -->
<!-- 액션로그 입력 -->
<insert id="insertActionLog" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml insertActionLog 액션로그입력 */
INSERT INTO TBSY_ACTION_LOG (
	   SEQ 			/* 일련번호 NUMBER  */
	 , MB_ID 		/* 회사ID VARCHAR2(20) */
	 , ACTION_URL 	/* 실행URL VARCHAR2(200) */
	 , CATEGORY 	/* 실행영역 VARCHAR2(100) */
	 , IN_EMP_CD	/* 입력자 VARCHAR2(20) */
	 , IN_DTM 		/* 입력일시 DATE */
	 , IN_IP        /* 접속IP */
) VALUES (
	   ACTION_LOG_SEQ.NEXTVAL 	/* 일련번호 NUMBER  */
	 , #{MB_ID} 			/* 회사ID VARCHAR2(20) */
	 , #{ACTION_URL} 		/* 실행URL VARCHAR2(200) */
	 , #{CATEGORY} 			/* 실행영역 VARCHAR2(100) */
	 , #{IN_EMP_CD}			/* 입력자 VARCHAR2(20) */
	 , SYSDATE	 			/* 입력일시 DATE */
	 , #{IN_IP}				 /* 접속IP */
)
</insert>

<!-- 액션로그 조회 sql -->
<sql id="selectActionLogList_SQL" >
 	SELECT * 
      FROM(SELECT TB1.SEQ                         /* 일련번호 NUMBER  */
                , TB1.MB_ID                     /* 회사ID VARCHAR2(20) */
                , TB1.ACTION_URL                 /* 실행URL VARCHAR2(200) */
                , TB1.CATEGORY                 /* 실행영역 VARCHAR2(100) */
                , TB1.IN_EMP_CD AS EMP_CD        /* 입력자 VARCHAR2(20) */
                , TB2.EMP_NM                     /* 입력자 VARCHAR2(20) */
                , TB1.IN_DTM                     /* 입력일시 DATE */
            FROM (SELECT * 
                    FROM TBSY_ACTION_LOG
                   WHERE MB_ID = 'YNG'
                     AND CATEGORY IS NOT NULL) TB1
            LEFT OUTER JOIN (SELECT * 
                               FROM TBIN_EMPMST 
                              WHERE MB_ID = 'YNG')TB2
              ON TB1.IN_EMP_CD = TB2.EMP_CD
           WHERE TO_CHAR (TB1.IN_DTM, 'YYYYMMDD') 
           		   BETWEEN REPLACE(#{SRCH_TERM_START_VALUE},'-','') 
       	    		    AND REPLACE(#{SRCH_TERM_END_VALUE},'-','')
		<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP_CD)'>    
			 AND ( TB2.EMP_CD LIKE '%' || #{SRCH_EMP_CD} || '%'
			    OR TB2.EMP_NM LIKE '%' || #{SRCH_EMP_CD} || '%')
		</if>              
          ) UNION ALL (
           SELECT TB1.SEQ
                , TB1.MB_ID
                , '(' || TB2.BD_NM || ')' || TB1.FILE_NM AS ACTION_URL
                , TB1.SYSTEM_GUBUN AS CATEGORY 
                , TB1.EMP_CD
                , TB3.EMP_NM
                , TB1.DN_DTM AS IN_DTM
            FROM( SELECT * 
                    FROM TBBD_DOWNLOAD_USER 
                   WHERE MB_ID = 'YNG')TB1
            LEFT OUTER JOIN (SELECT * 
                               FROM TBBD_BOARD 
                              WHERE MB_ID = 'YNG' 
                                AND USE_YN = 'Y')TB2
              ON TB1.BD_NO = TB2.BD_NO
            LEFT OUTER JOIN (SELECT * 
                               FROM TBIN_EMPMST 
                              WHERE MB_ID = 'YNG')TB3
              ON TB1.EMP_CD = TB3.EMP_CD
           WHERE TO_CHAR (TB1.DN_DTM, 'YYYYMMDD')
           		   BETWEEN REPLACE(#{SRCH_TERM_START_VALUE},'-','') 
       	    		    AND REPLACE(#{SRCH_TERM_END_VALUE},'-','')
		<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP_CD)'>    
			  AND ( TB3.EMP_CD LIKE '%' || #{SRCH_EMP_CD} || '%'
			     OR TB3.EMP_NM LIKE '%' || #{SRCH_EMP_CD} || '%')
		</if>                     
          ) UNION ALL ( 
           SELECT TB1.SEQ
                , TB1.MB_ID
                , '(' || TB2.BD_NM || ')' || TB1.FILE_NM AS ACTION_URL
                , '열람' AS CATEGORY
                , TB1.EMP_CD
                , TB3.EMP_NM
                , TB1.READ_DTM AS IN_DTM  
             FROM (SELECT * 
                     FROM TBBD_READ_USER
                    WHERE MB_ID = 'YNG')TB1
             LEFT OUTER JOIN (SELECT * 
                                FROM TBBD_BOARD 
                               WHERE MB_ID = 'YNG' 
                                 AND USE_YN = 'Y')TB2
               ON TB1.BD_NO = TB2.BD_NO
             LEFT OUTER JOIN (SELECT * 
                                FROM TBIN_EMPMST 
                               WHERE MB_ID = 'YNG')TB3
               ON TB1.EMP_CD = TB3.EMP_CD
        	WHERE TO_CHAR (TB1.READ_DTM, 'YYYYMMDD') 
        		    BETWEEN REPLACE(#{SRCH_TERM_START_VALUE},'-','') 
       	    		    AND REPLACE(#{SRCH_TERM_END_VALUE},'-','')
		<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP_CD)'>    
			  AND ( TB3.EMP_CD LIKE '%' || #{SRCH_EMP_CD} || '%'
			     OR TB3.EMP_NM LIKE '%' || #{SRCH_EMP_CD} || '%')
		</if>                      
          ) UNION ALL (
           SELECT TB1.SEQ
                , TB1.MB_ID
                , '(' || TB1.SYSTEM_GUBUN || ')' || TB1.LOGIN_IP AS ACTION_URL 
                , '로그인' AS CATEGORY
                , CASE WHEN TB1.EMP_CD = 'sum'
                	   THEN '시스템관리자'
                	   WHEN TB1.EMP_CD = 'ccm'
                	   THEN '관리자'
                	   ELSE TB1.EMP_CD
                   END AS EMP_CD
                , TB2.EMP_NM
                , TB1.LOGIN_DTM AS IN_DTM
             FROM (SELECT *
                     FROM TBSY_LOGIN_HIST
                    WHERE MB_ID = 'YNG')TB1
             LEFT OUTER JOIN (SELECT * 
                                FROM TBIN_EMPMST 
                               WHERE MB_ID = 'YNG')TB2
               ON TB1.EMP_CD = TB2.EMP_CD
       	    WHERE TO_CHAR (TB1.LOGIN_DTM, 'YYYYMMDD') 
       	    	    BETWEEN REPLACE(#{SRCH_TERM_START_VALUE},'-','') 
       	    		    AND REPLACE(#{SRCH_TERM_END_VALUE},'-','')
		<if test='@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_EMP_CD)'>    
			  AND ( TB2.EMP_CD LIKE '%' || #{SRCH_EMP_CD} || '%'
			     OR TB2.EMP_NM LIKE '%' || #{SRCH_EMP_CD} || '%')
		</if>               
          )
</sql>

<!-- 액션로그 조회 -->
<select id="selectActionLogList" parameterType="kr.co.fw.system.SystemVO" resultType="kr.co.fw.system.SystemVO">
/* system-mapper.xml insertActionLog 액션로그조회 */
<include refid="selectActionLogList_SQL" />
ORDER BY IN_DTM DESC
</select>

<!-- 액션로그 조회엑셀 -->
<select id="selectActionLogListExcel" parameterType="kr.co.fw.system.SystemVO" resultType="Hmap">
/* system-mapper.xml insertActionLog 액션로그엑셀 */
<include refid="selectActionLogList_SQL" />
ORDER BY IN_DTM DESC
</select>

<!-- 액션로그(게시판 확인)로그 입력 -->
<insert id="insertReadAction" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml insertReadAction 게시판 확인(로그) */
INSERT INTO TBBD_READ_USER (
	   SEQ 	/* 일련번호  VARCHAR2(20)*/
	 , MB_ID 	/* 회사코드  VARCHAR2(20)*/
	 , EMP_CD 	/* 사원번호  VARCHAR2(20)*/
	 , BD_NO 	/* 게시판번호  VARCHAR2(20)*/
	 , ITEM_NO 	/* 게시글번호  VARCHAR2(20)*/
	 , FILE_NM 	/* 파일명  VARCHAR2(40)*/
	 , READ_DTM 	/* 조회날짜  DATE(7)*/
	 , RECEIVER 	/* 게시자  VARCHAR2(20)*/
) VALUES (
	   TBBD_READ_USER_SEQ.NEXTVAL
	 , #{MB_ID}
	 , #{IN_EMP_CD}
	 , #{BD_NO}
	 , #{ITEM_NO}
	 , #{FILE_NM}
	 , SYSDATE
	 , #{ACTIONGUBUN}
)
</insert>

<!-- 액션로그(이미지다운로드)로그 입력 -->
<insert id="insertImgHist" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml insertImgHist 이미지다운로드(로그) */
INSERT INTO TBBD_DOWNLOAD_USER (
	   SEQ 	/* 일련번호  VARCHAR2(20)*/
	 , MB_ID 	/* 회사코드  VARCHAR2(20)*/
	 , EMP_CD 	/* 사원번호  VARCHAR2(20)*/
	 , BD_NO 	/* 게시판번호  VARCHAR2(20)*/
	 , ITEM_NO 	/* 게시글번호  VARCHAR2(20)*/
	 , FILE_NM 	/* 파일명  VARCHAR2(40)*/
	 , DN_DTM 	/* 다운로드날짜  DATE(7)*/
	 , SYSTEM_GUBUN 	/* 시스템구분  VARCHAR2(20)*/
) VALUES (
	   TBBD_DOWNLOAD_USER_SEQ.NEXTVAL
	 , #{MB_ID}
	 , #{IN_EMP_CD}
	 , #{BD_NO}
	 , #{ITEM_NO}
	 , #{FILE_NM}
	 , SYSDATE
	 , #{ACTIONGUBUN}
)
</insert>


<!-- ******* 비밀번호 영역 ******* -->
<!-- 비밀번호 수정 -->
<update id="updatePassword" parameterType="LoginVO">
/* system-mapper.xml updatePassword 비번수정 */
UPDATE TBSY_LOGIN
   SET USER_PWD  = #{USER_PWD}
     , UP_DTM    = SYSDATE
     , UP_EMP_CD = #{IN_EMP_CD}
 WHERE MB_ID     = #{MB_ID}
   AND EMP_CD    = #{EMP_CD}
</update>

<!-- 로그인 정보 저장 -->
<insert id="insertLoginInfo" parameterType="LoginVO">
/* system-mapper.xml insertLoginInfo 로그인 정보 저장 */
INSERT
  INTO TBSY_LOGIN /* [SY][시스템] 로그인 정보 */
     ( EMP_CD           /* 사번               VARCHAR2(30)  */
     , USER_ID          /* 사용자 ID          VARCHAR2(30)  */
     , USER_NM          /* 사용자 이름        VARCHAR2(20)  */
     , IP_ADDR          /* 사용자 IP 주소     VARCHAR2(40)  */
     , LOGI_YN          /* 로그인 여부        VARCHAR2(1)   */
     , PWD_INTZN_YN     /* 비밀번호초기화여부 VARCHAR2(1)   */
     , ACCT_LOCK_YN     /* 계정잠김여부       VARCHAR2(1)   */
     , USER_PWD         /* 사용자 비밀번호    VARCHAR2(430) */
     , TRNS_USER_PWD    /* 임시 비빌번호      VARCHAR2(430) */
     , PWD_ERR_NBTM     /* 비밀번호 오류횟수  NUMBER(2,0)   */
     , PWD_CHG_DT       /* 비밀번호 변경일자  VARCHAR2(8)   */
     , MEMO             /* 메모               VARCHAR2(200) */
     , REG_DTM          /* 등록일시           DATE(7)       */
     , REG_EMP_CD       /* 등록자             VARCHAR2(20)  */
     , MB_ID            /* 회사코드           VARCHAR2(10)  */
     , FSB_SEQ          /* 일련번호           NUMBER(38,0)  */
     )
VALUES
     ( #{EMP_CD       }   /* 사번               VARCHAR2(30)  */
     , #{USER_ID      }   /* 사용자 ID          VARCHAR2(30)  */
     , #{USER_NM      }   /* 사용자 이름        VARCHAR2(20)  */
     , #{IP_ADDR      }   /* 사용자 IP 주소     VARCHAR2(40)  */
     , #{LOGI_YN      }   /* 로그인 여부        VARCHAR2(1)   */
     , #{PWD_INTZN_YN }   /* 비밀번호초기화여부 VARCHAR2(1)   */
     , #{ACCT_LOCK_YN }   /* 계정잠김여부       VARCHAR2(1)   */
     , #{USER_PWD     }   /* 사용자 비밀번호    VARCHAR2(430) */
     , #{TRNS_USER_PWD}   /* 임시 비빌번호      VARCHAR2(430) */
     , #{PWD_ERR_NBTM }   /* 비밀번호 오류횟수  NUMBER(2,0)   */
     , #{PWD_CHG_DT   }   /* 비밀번호 변경일자  VARCHAR2(8)   */
     , #{MEMO         }   /* 메모               VARCHAR2(200) */
     , SYSDATE            /* 등록일시           DATE(7)       */
     , #{REG_EMP_CD   }   /* 등록자             VARCHAR2(20)  */
     , #{MB_ID        }   /* 회사코드           VARCHAR2(10)  */
     , TBSY_LOGIN_FSB_SEQ.NEXTVAL  /* 일련번호           NUMBER(38,0)  */
     )
</insert>

<!-- 로그인 정보 수정 -->
<update id="updateLoginInfo" parameterType="LoginVO">
/* system-mapper.xml updateLoginInfo 로그인 정보 수정 */
UPDATE TBSY_LOGIN /* [SY][시스템] 로그인 정보 */
   SET USER_NM       = #{USER_NM      }    /* 사용자 이름        VARCHAR2(20)  */
     , IP_ADDR       = #{IP_ADDR      }    /* 사용자 IP 주소     VARCHAR2(40)  */
     , LOGI_YN       = #{LOGI_YN      }    /* 로그인 여부        VARCHAR2(1)   */
     , PWD_INTZN_YN  = #{PWD_INTZN_YN }    /* 비밀번호초기화여부 VARCHAR2(1)   */
     , ACCT_LOCK_YN  = #{ACCT_LOCK_YN }    /* 계정잠김여부       VARCHAR2(1)   */
     , USER_PWD      = #{USER_PWD     }    /* 사용자 비밀번호    VARCHAR2(430) */
     , TRNS_USER_PWD = #{TRNS_USER_PWD}    /* 임시 비빌번호      VARCHAR2(430) */
     , PWD_ERR_NBTM  = #{PWD_ERR_NBTM }    /* 비밀번호 오류횟수  NUMBER(2,0)   */
     , PWD_CHG_DT    = #{PWD_CHG_DT   }    /* 비밀번호 변경일자  VARCHAR2(8)   */
     , MEMO          = #{MEMO         }    /* 메모               VARCHAR2(200) */
     , UP_DTM        = SYSDATE             /* 수정일시           DATE(7)       */
     , UP_EMP_CD     = #{UP_EMP_CD    }    /* 수정자             VARCHAR2(20)  */
 WHERE MB_ID = #{MB_ID}
   AND EMP_CD = #{EMP_CD}
</update>

<!-- 로그인 정보 삭제 -->
<delete id="deleteLoginInfo" parameterType="LoginVO">
/* system-mapper.xml deleteLoginInfo 로그인 정보 삭제 */
DELETE TBSY_LOGIN
 WHERE MB_ID = #{MB_ID}
   AND EMP_CD = #{EMP_CD}
</delete>

<!-- 인증번호저장 -->
<insert id="insertusercheck" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml insertusercheck 인증번호저장 */
	INSERT 
	  INTO TBSY_USER_AUTH_NUM 
	     ( MB_ID
		 , USER_NM
		 , AUTH_NUM
		 , IN_DTM
		 , BIGO
		 , DATA_DCD
) VALUES ( #{MB_ID}
 		 , #{USER_NM}
 		 , #{AUTH_NUM}
 		 , SYSDATE
 		 , #{BIGO}
		 , #{DATA_DCD}	
		 )
</insert>

<insert id="insertcheckhist" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml "insertcheckhist" 인증기록저장 */
	INSERT 
	  INTO TBSY_USER_AUTH_HIST 
	     ( SEQ
	     , MB_ID
		 , USER_NM
		 , IN_DTM
		 , BIGO
		 , DATA_DCD
) VALUES ( TBSY_USER_AUTH_HIST_SEQ.NEXTVAL 
		 , #{MB_ID}
 		 , #{USER_NM}
 		 , SYSDATE
 		 , #{BIGO}
		 , CASE WHEN 'S' = #{DATA_DCD}
		 		THEN '인증요청'
		 		WHEN 'I' = #{DATA_DCD}
		 		THEN '인증완료'
		    END 
		 )
</insert>

<delete id="deleteusercheck" parameterType="kr.co.fw.system.SystemVO">
/* system-mapper.xml "deleteusercheck" 인증번호삭제 */
	DELETE 
      FROM TBSY_USER_AUTH_NUM
     WHERE MB_ID = #{MB_ID}
 	   AND USER_NM = #{USER_NM}
 	   AND BIGO = #{BIGO}
</delete>

<select id="checkUserAuthNo" parameterType="kr.co.fw.system.SystemVO" resultType="Integer">
/* system-mapper.xml "checkUserAuthNo" 인증번호매칭확인 */
	SELECT COUNT(USER_NM)
      FROM TBSY_USER_AUTH_NUM
     WHERE MB_ID = #{MB_ID}
 	   AND USER_NM = #{USER_NM}
 	   AND BIGO = #{BIGO}
 	   AND AUTH_NUM = #{AUTH_NUM}
 	   AND DATA_DCD = 'S'
</select>

</mapper>
