<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Schedule">

<select id="selectScheduleList" parameterType="kr.co.fw.common.schedule.ScheduleVO" resultType="kr.co.fw.common.schedule.ScheduleVO">
	/* schedule-mapper selectScheduleList 일정관리 리스트 조회 */
	    SELECT NULL AS BD_NO
         , SEQ
         , START_DATE
         , START_DATE AS END_DATE
         , GUBUN
         , CONTENT
         , PLACE
         , MB_ID
        FROM TBAM_SCHEDULE
      WHERE MB_ID = #{MB_ID}
UNION ALL
     SELECT BD_NO
          , ITEM_NO AS SEQ
          , START_DATE
          , END_DATE
          , '#00a9ff' AS GUBUN
          , TITL AS CONTENT
          , '' AS PLACE
          , MB_ID
         FROM TBBD_ITEM
       WHERE MB_ID = #{MB_ID}
         AND SCHEDULE_YN = 'Y'
</select>

<insert id="insertSchedule" parameterType="kr.co.fw.common.schedule.ScheduleVO">
	/* schdule-mapper.xml insertSchedule 일정관리 내용 입력 */
	INSERT 
	  INTO TBAM_SCHEDULE( SEQ
						 , START_DATE
						 , END_DATE
						 , GUBUN
						 , CONTENT
						 , PLACE
						 , IN_EMP_CD
						 , IN_DTM
						 , MB_ID ) 
						  VALUES 
						(  SEQ_TBAM_SCHEDULE.NEXTVAL
						 , #{START_DATE}
						 , #{START_DATE}
						 , #{GUBUN}
						 , #{CONTENT}
						 , #{PLACE}
						 , #{IN_EMP_CD}
						 , SYSDATE
						 , #{MB_ID} )
</insert>

<update id="updateSchedule" parameterType="kr.co.fw.common.schedule.ScheduleVO">
	/* schdule-mapper.xml updateSchedule 일정관리 내용 수정 */
	UPDATE TBAM_SCHEDULE
	 SET START_DATE		= #{START_DATE}
	   , END_DATE		= #{START_DATE}
	   , GUBUN			= #{GUBUN}
	   , CONTENT		= #{CONTENT}
	   , PLACE			= #{PLACE}
	   , UP_EMP_CD		= #{UP_EMP_CD}
	   , UP_DTM			= SYSDATE
	 WHERE SEQ	= #{SEQ}
	 AND MB_ID	= #{MB_ID}
</update>

<select id="selectScheduleDetail" parameterType="kr.co.fw.common.schedule.ScheduleVO" resultType="kr.co.fw.common.schedule.ScheduleVO">
	/* schdule-mapper selectScheduleDetail 일정관리 내용 조회 */
	SELECT A.SEQ
	     , A.START_DATE
	     , A.END_DATE
	     , A.GUBUN
	     , CM1.CD_VL_NM AS GUBUN_NM
	     , A.CONTENT
	     , A.PLACE
	     , A.MB_ID
  FROM TBAM_SCHEDULE A
 LEFT OUTER JOIN TBCM_COMMON_CODE CM1
  	 ON A.MB_ID = CM1.MB_ID
  	AND A.GUBUN = CM1.CD_VL
  	AND CM1.GRP_CMM_CD = 'COLOR_GUBUN' 
   WHERE A.MB_ID = #{MB_ID}
	 AND A.SEQ	= #{SEQ}
</select>

<delete id="deleteSchedule" parameterType="kr.co.fw.common.schedule.ScheduleVO">
	/* schdule-mapper.xml updateSchedule 일정관리 내용 삭제 */
	DELETE TBAM_SCHEDULE
		WHERE SEQ = #{SEQ}
		  AND MB_ID = #{MB_ID}
</delete>

<select id="selectMainScheduleList" parameterType="kr.co.fw.common.schedule.ScheduleVO" resultType="Hmap">
/* schdule-mapper.xml selectMainScheduleList 메인화면 일정 데이터 */
SELECT * 
	FROM (	SELECT NULL AS BD_NO
				 , SEQ
				 , START_DATE
			     , END_DATE
			     , CONTENT
		   FROM TBAM_SCHEDULE
		  WHERE MB_ID = #{MB_ID}
		UNION ALL
		     SELECT BD_NO
				  , ITEM_NO AS SEQ
				  , START_DATE
		          , END_DATE
		          , TITL AS CONTENT
		   FROM TBBD_ITEM
		  WHERE MB_ID = #{MB_ID}
		    AND SCHEDULE_YN = 'Y')
  WHERE 1=1
 <if test="@kr.co.fw.common.util.CommUtil@isEmpty(SRCH_DATE)">
   AND TO_CHAR(SYSDATE,'YYYY-MM') = SUBSTR(START_DATE,1,7)
 </if>
 <if test="@kr.co.fw.common.util.CommUtil@isNotEmpty(SRCH_DATE)">
   AND TO_CHAR(TO_DATE(#{SRCH_DATE},'YYYY-MM'),'YYYY-MM') = SUBSTR(START_DATE,1,7)
 </if>	 
ORDER BY START_DATE
</select>

<select id="selectMainScheduleEvents" parameterType="kr.co.fw.common.schedule.ScheduleVO" resultType="Hmap">
/* schdule-mapper.xml selectMainScheduleEvents 메인화면 일정 */
SELECT START_DATE
     , MIN(GUBUN) AS GUBUN
  FROM (SELECT START_DATE 
             , GUBUN
            FROM (SELECT A.START_DATE
                         , A.GUBUN
                         , B.SORT_NO
                         , ROW_NUMBER() OVER (PARTITION BY A.START_DATE ORDER BY B.SORT_NO) AS RANK
                      FROM TBAM_SCHEDULE A
                     LEFT OUTER JOIN TBCM_COMMON_CODE B 
                         ON A.MB_ID = B.MB_ID
                        AND B.GRP_CMM_CD = 'COLOR_GUBUN'
                        AND A.GUBUN = B.CD_VL
                     WHERE A.MB_ID = #{MB_ID}
                    ORDER BY A.START_DATE, B.SORT_NO)
          WHERE RANK = 1
    UNION ALL
<![CDATA[   SELECT B.START_DATE
                 , B.GUBUN
              FROM (SELECT ITEM_NO
                         , START_DATE
                         , END_DATE 
                      FROM TBBD_ITEM
                   WHERE MB_ID = 'YNG'
                     AND SCHEDULE_YN = 'Y') A,
                   (SELECT YMD AS START_DATE
                              , '#00a9ff' AS GUBUN
                        FROM(    SELECT TO_CHAR(TO_DATE(START_DATE, 'YYYY-MM-DD')+(LEVEL-1),'YYYY-MM-DD') AS YMD
                                      , '#00a9ff' AS GUBUN
                                     FROM (SELECT MIN(START_DATE) AS START_DATE, MAX(END_DATE) AS END_DATE FROM TBBD_ITEM
                                   WHERE MB_ID = 'YNG'
                                     AND SCHEDULE_YN = 'Y') 
                       CONNECT BY TO_DATE(START_DATE, 'YYYY-MM-DD')+(LEVEL-1) <= TO_DATE(END_DATE, 'YYYY-MM-DD'))
                       ) B
                   
                   WHERE B.START_DATE BETWEEN A.START_DATE AND A.END_DATE 
                 GROUP BY B.START_DATE, B.GUBUN
     )
    GROUP BY START_DATE ]]>
</select>
</mapper>